import logging
from aiogram import Bot, Dispatcher, executor, types
import marcup as nav
import random


API_TOKEN = '5462694930:AAEwAbrMBthewarPXeKz3qvc-ZFS-nMPX94'

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    
    await message.reply("–≤—ñ—Ç–∞—é –º–∞–Ω–¥—Ä—ñ–≤–Ω–∏–∫", reply_markup =nav.marcup)


@dp.message_handler(commands=['help'])
async def send_message(message: types.Message):
    
    await message.reply("–¥–µ–Ω–µ–≥ –Ω–µ—Ç –Ω–æ –≤—ã –¥–µ—Ä—à–∏—Ç–µ—Å—å")

@dp.message_handler()
async def send_message(message: types.Message):
    if message.text == "—è–∫ —Å–ø—Ä–∞–≤–∏":
        await bot.send_message(message.from_user.id, "–Ω–æ—Ä–º–∞–ª—å–Ω–æ —Å–∞–º —è–∫?")

    elif message.text == "–º–æ–∂–µ –ø–æ –ø–∏–≤–∫—É":
        await bot.send_message(message.from_user.id, "–¥–∞–≤–∞–π üçª")

    elif message.text == "–∫—É–ø–∏ –º–µ–Ω—ñ –º–∞—à–∏–Ω—É":
        await bot.send_message(message.from_user.id, "–¥–µ—Ä–∂–∏ –æ—Ç –¥—É—à–∏ üõª")



    elif message.text == "–≤–∏–ø–∞–¥–∫–æ–≤–µ —á–∏—Å–ª–æ":
        await bot.send_message(message.from_user.id, "–≤–∞—à–µ —á–∏—Å–ª–æ: " + str(random.randint(1, 1000)))



if __name__ == '__main__':
	executor.start_polling(dp, skip_updates=True)